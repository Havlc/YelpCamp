'use strict';

<<<<<<< HEAD
const isExclusive = require('../projection/isExclusive');
const isInclusive = require('../projection/isInclusive');

=======
>>>>>>> e850dbdd69512603c0d4d12d8d93e241262e32af
/*!
 * ignore
 */

<<<<<<< HEAD
module.exports = function selectPopulatedFields(fields, userProvidedFields, populateOptions) {
  if (populateOptions == null) {
    return;
  }

  const paths = Object.keys(populateOptions);
  userProvidedFields = userProvidedFields || {};
  if (isInclusive(fields)) {
    for (const path of paths) {
      if (!isPathInFields(userProvidedFields, path)) {
        fields[path] = 1;
      } else if (userProvidedFields[path] === 0) {
        delete fields[path];
      }
    }
  } else if (isExclusive(fields)) {
    for (const path of paths) {
      if (userProvidedFields[path] == null) {
        delete fields[path];
=======
module.exports = function selectPopulatedFields(query) {
  const opts = query._mongooseOptions;

  if (opts.populate != null) {
    const paths = Object.keys(opts.populate);
    const userProvidedFields = query._userProvidedFields || {};
    if (query.selectedInclusively()) {
      for (let i = 0; i < paths.length; ++i) {
        if (!isPathInFields(userProvidedFields, paths[i])) {
          query.select(paths[i]);
        } else if (userProvidedFields[paths[i]] === 0) {
          delete query._fields[paths[i]];
        }
      }
    } else if (query.selectedExclusively()) {
      for (let i = 0; i < paths.length; ++i) {
        if (userProvidedFields[paths[i]] == null) {
          delete query._fields[paths[i]];
        }
>>>>>>> e850dbdd69512603c0d4d12d8d93e241262e32af
      }
    }
  }
};

/*!
 * ignore
 */

function isPathInFields(userProvidedFields, path) {
  const pieces = path.split('.');
  const len = pieces.length;
  let cur = pieces[0];
  for (let i = 1; i < len; ++i) {
<<<<<<< HEAD
    if (userProvidedFields[cur] != null || userProvidedFields[cur + '.$'] != null) {
=======
    if (userProvidedFields[cur] != null) {
>>>>>>> e850dbdd69512603c0d4d12d8d93e241262e32af
      return true;
    }
    cur += '.' + pieces[i];
  }
<<<<<<< HEAD
  return userProvidedFields[cur] != null || userProvidedFields[cur + '.$'] != null;
=======
  return userProvidedFields[cur] != null;
>>>>>>> e850dbdd69512603c0d4d12d8d93e241262e32af
}
