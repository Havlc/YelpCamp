
/*!
 * Module dependencies.
 */

'use strict';

const MongooseError = require('./');

<<<<<<< HEAD

class OverwriteModelError extends MongooseError {
  /*!
   * OverwriteModel Error constructor.
   * @param {String} name
   */
  constructor(name) {
    super('Cannot overwrite `' + name + '` model once compiled.');
  }
}

Object.defineProperty(OverwriteModelError.prototype, 'name', {
  value: 'OverwriteModelError'
});
=======
/*!
 * OverwriteModel Error constructor.
 *
 * @inherits MongooseError
 */

function OverwriteModelError(name) {
  MongooseError.call(this, 'Cannot overwrite `' + name + '` model once compiled.');
  this.name = 'OverwriteModelError';
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this);
  } else {
    this.stack = new Error().stack;
  }
}

/*!
 * Inherits from MongooseError.
 */

OverwriteModelError.prototype = Object.create(MongooseError.prototype);
OverwriteModelError.prototype.constructor = MongooseError;
>>>>>>> e850dbdd69512603c0d4d12d8d93e241262e32af

/*!
 * exports
 */

module.exports = OverwriteModelError;
